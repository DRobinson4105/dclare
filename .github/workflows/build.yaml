name: build

on: [push, repository_dispatch]

jobs:
  build:
    runs-on: ubuntu-20.04 # use preview for now, on 18.04 errors will occur
    env:
      GITHUB_TOKEN: "${{secrets.REPO_AND_PACKAGES_TOKEN}}"
    steps:
      - name: "checkout"
        uses: actions/checkout@v1

      - name: "attach head"
        run: git checkout "${GITHUB_REF#refs/heads/}"

      - name: "setup JDK"
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: "get buildtools"
        uses: ModelingValueGroup/buildtools@master

      - name: "get generic info" # for header file used below
        uses: ModelingValueGroup/generic-info@master

      - name: "(re)generate some files"
        run: |
          . <(java -jar ~/buildtools.jar)
          generateAll
          cat <<EOF >build.properties
          jdk.home.11=$JAVA_HOME
          path.variable.maven_repository=$HOME/.m2/repository
          EOF
          correctEols
          correctHeaders header

      - name: "push changes back to github"
        run:  |
          . <(java -jar ~/buildtools.jar)
          pushBackToGithub

      #=========== build & test: ===================================================================
      - name: "download dependencies (as mentioned in pom)"
        run:  |
          . <(java -jar ~/buildtools.jar)
          getAllDependencies "${{secrets.SCALEWAY_ACCESS_KEY}}" "${{secrets.SCALEWAY_SECRET_KEY}}"
          installJunitlauncher

      - name: "build"
        run:  ant

      - name: "test"
        run:  |
          if ! ant test; then
            for i in TEST-*.xml; do
              echo "=============== $i"
              sed "s/^/>> /" $i
            done
            exit 42
          fi

      - name: "generate javadoc"
        run:  ant javadoc

      #=========== publish: ===================================================================
      - name: "publish action-artifact jar"
        uses: actions/upload-artifact@v1
        with:
          name: dclare.jar
          path: out/artifacts/dclare.jar

      - name: "publish action-artifact sources"
        uses: actions/upload-artifact@v1
        with:
          name: dclare-sources.jar
          path: out/artifacts/dclare-sources.jar

      - name: "publish action-artifact javadoc"
        uses: actions/upload-artifact@v1
        with:
          name: dclare-javadoc.jar
          path: out/artifacts/dclare-javadoc.jar

      - name: "publish action-artifact test-results"
        uses: actions/upload-artifact@v1
        with:
          name: dclare-testresults.jar
          path: out/artifacts/dclare-testresults.jar

      - name: "publish jars on S3"
        uses: ModelingValueGroup/sync-s3-action@master
        with:
          access_key     : "${{secrets.SCALEWAY_ACCESS_KEY}}"
          secret_key     : "${{secrets.SCALEWAY_SECRET_KEY}}"
          trigger_token  : "${{secrets.RETRIGGER_TOKEN}}"
          bucket         : "mvg-artifacts"
          cmd            : "put"
          local_dir      : "out/artifacts"
          s3_dir_branched: "/"

      #=========== only if master: ==============================================================
      - name: "if master: tag with version"
        if: github.ref == 'refs/heads/master'
        run: |
          . <(java -jar ~/buildtools.jar)
          setVersionTag

      - name: "if master: publish maven-artifacts (jar/pom/sources/javadoc)"
        uses: ModelingValueGroup/upload-maven-package-action@master
        if  : github.ref == 'refs/heads/master'
        with:
          file : "out/artifacts/dclare.jar"
