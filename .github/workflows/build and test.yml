name: build and test

on: [push]

jobs:
  build-and-test:
    env:
      MYNAME: dclare

    runs-on: ubuntu-latest

    steps:
      - name: "checkout"
        uses: actions/checkout@v1

      - name: "attach git head"
        run: git checkout "${GITHUB_REF#refs/heads/}"

      - name: "setup JDK"
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: "get generic info"
        uses: ModelingValueGroup/generic-info@master

      - name: "get buildTools"
        uses: ModelingValueGroup/buildTools@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: "prepare ant"
        run:  |
          cat <<EOF >build.properties
          jdk.home.11=$JAVA_HOME
          path.variable.maven_repository=$HOME/.m2/repository
          EOF

      - name: "(re)generate some files"
        run:  |
          . <(java -jar buildTools.jar)
          generateAll
          correctEols
          correctHeaders header

      - name: "TMP - push changes back to github"
        run:  |
          . <(java -jar buildTools.jar)
          pushBackToGithub "${{ secrets.GITHUB_TOKEN }}" "automation@modelingvalue.com" "adjusted files [by github actions]"

      - name: "download dependencies (as mentioned in pom)"
        run:  |
          . <(java -jar buildTools.jar)
          getAllDependencies ${{ secrets.GITHUB_TOKEN }}

      - name: "build"
        run:  ant

      - name: "test"
        run:  ant test.results.jar.${{MYNAME}}

      - name: "generate javadoc"
        run:  ant javadoc.module.${{MYNAME}}

      - name: "push changes back to github"
        run:  |
          . <(java -jar buildTools.jar)
          pushBackToGithub "${{ secrets.GITHUB_TOKEN }}" "automation@modelingvalue.com" "adjusted files [by github actions]"

      - name: "publish action-artifact jar"
        uses: actions/upload-artifact@v1
        with:
          name: ${{MYNAME}}.jar
          path: out/artifacts/${{MYNAME}}.jar

      - name: "publish action-artifact sources"
        uses: actions/upload-artifact@v1
        with:
          name: ${{MYNAME}}-sources.jar
          path: out/artifacts/${{MYNAME}}-sources.jar

      - name: "publish action-artifact javadoc"
        uses: actions/upload-artifact@v1
        with:
          name: ${{MYNAME}}-javadoc.jar
          path: out/artifacts/${{MYNAME}}-javadoc.jar

      - name: "publish action-artifact test-results"
        uses: actions/upload-artifact@v1
        with:
          name: ${{MYNAME}}-testresults.jar
          path: out/artifacts/${{MYNAME}}-testresults.jar

      - name: "publish maven-artifacts (jar/pom/sources/javadoc)"
        uses: ModelingValueGroup/upload-maven-package-action@master
        if: github.ref == 'refs/heads/master'
        with:
          file: "out/artifacts/${{MYNAME}}.jar"
          token: "${{ secrets.GITHUB_TOKEN }}"
